*------------------------------------------------------------*;
* EM Version: 15.1;
* SAS Release: 9.04.01M6P110718;
* Host: odaws04-usw2.oda.sas.com;
* Project Path: ~;
* Project Name: DO_Assignment 3;
* Diagram Id: EMWS3;
* Diagram Name: Ensemble 2;
* Generated by: dennisorellana20;
* Date: 15AUG2020:18:37:55;
*------------------------------------------------------------*;
*------------------------------------------------------------*;
* Macro Variables;
*------------------------------------------------------------*;
%let EM_PROJECT =;
%let EM_PROJECTNAME =;
%let EM_WSNAME =;
%let EM_WSDESCRIPTION =Ensemble 2;
%let EM_SUMMARY =WORK.SUMMARY;
%let EM_NUMTASKS =SINGLE;
%let EM_EDITMODE =R;
%let EM_DEBUGVAL =;
%let EM_ACTION =run report;
*------------------------------------------------------------*;
%macro em_usedatatable;
%if ^%symexist(EM_USEDATATABLE) %then %do;
%let EM_USEDATATABLE = Y;
%end;
%if "&EM_USEDATATABLE" ne "N" %then %do;
%global Ids_data Ids_newdata;
*------------------------------------------------------------*;
* Data Tables;
*------------------------------------------------------------*;
%let Ids_data = CREDIT.EM_SAVE_TRAIN;
%let Ids_newdata =;
*------------------------------------------------------------*;
%end;
%global Ids_source;
%if "&Ids_newdata" ne "" %then %do;
%let Ids_source = USERTABLE;
%end;
%else %do;
%let Ids_source = DATASOURCE;
%end;
%mend em_usedatatable;
%em_usedatatable;
*------------------------------------------------------------*;
* Create workspace data set;
*------------------------------------------------------------*;
data workspace;
length property $64 value $200;
property= 'PROJECTLOCATION';
value= "&EM_PROJECT";
output;
property= 'PROJECTNAME';
value= "&EM_PROJECTNAME";
output;
property= 'WORKSPACENAME';
value= "&EM_WSNAME";
output;
property= 'WORKSPACEDESCRIPTION';
value= "&EM_WSDESCRIPTION";
output;
property= 'SUMMARYDATASET';
value= "&EM_SUMMARY";
output;
property= 'NUMTASKS';
value= "&EM_NUMTASKS";
output;
property= 'EDITMODE';
value= "&EM_EDITMODE";
output;
property= 'DEBUG';
value= "&EM_DEBUGVAL";
output;
run;
*------------------------------------------------------------*;
* Create nodes data set;
*------------------------------------------------------------*;
data nodes;
length id $12 component $32 description $64 X 8 Y 8 diagramID $32 parentID $32;
id= "Tree";
component="DecisionTree";
description= "Decision Tree";
diagramID="_ROOT_";
parentID="";
X=847;
Y=197;
output;
id= "Trans";
component="Transform";
description= "Transform Variables";
diagramID="_ROOT_";
parentID="";
X=695;
Y=28;
output;
id= "Repl";
component="Replace";
description= "Replacement";
diagramID="_ROOT_";
parentID="";
X=330;
Y=205;
output;
id= "Reg";
component="Regression";
description= "Regression";
diagramID="_ROOT_";
parentID="";
X=903;
Y=19;
output;
id= "Part";
component="Partition";
description= "Data Partition";
diagramID="_ROOT_";
parentID="";
X=482;
Y=99;
output;
id= "Neural";
component="NeuralNetwork";
description= "Neural Network";
diagramID="_ROOT_";
parentID="";
X=890;
Y=105;
output;
id= "MdlComp";
component="ModelCompare";
description= "Model Comparison";
diagramID="_ROOT_";
parentID="";
X=1329;
Y=298;
output;
id= "Ids";
component="DataSource";
description= "Credit Cards Payments";
diagramID="_ROOT_";
parentID="";
X=184;
Y=79;
output;
id= "HPSVM";
component="HPDMSVM";
description= "HP SVM";
diagramID="_ROOT_";
parentID="";
X=858;
Y=305;
output;
id= "HPDMForest";
component="HPDMForest";
description= "HP Forest";
diagramID="_ROOT_";
parentID="";
X=868;
Y=390;
output;
id= "Ensmbl";
component="Ensemble";
description= "Ensemble";
diagramID="_ROOT_";
parentID="";
X=1210;
Y=48;
output;
id= "Boost";
component="Boost";
description= "Gradient Boosting";
diagramID="_ROOT_";
parentID="";
X=860;
Y=510;
output;
run;
*------------------------------------------------------------*;
* DataSource Properties;
*------------------------------------------------------------*;
data WORK.creditcardspayments_P;
  length   Property                         $ 32
           Value                            $ 200
           ;

Property="Name";
Value="Credit Cards Payments";
output;
Property="CreateDate";
Value="1910118911.8";
output;
Property="ModifyDate";
Value="1910118911.8";
output;
Property="CreatedBy";
Value="dennisorellana20";
output;
Property="ModifiedBy";
Value="dennisorellana20";
output;
Property="SampleSizeType";
Value="";
output;
Property="SampleSize";
Value="";
output;
;
run;
*------------------------------------------------------------*;
* USERTRAINCODE File for Tree;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Tree_USERTRAINCODE.sas";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath";
file dspath;
run;
*------------------------------------------------------------*;
* EMNOTES File for Tree;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Tree_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* INTERACTION Data Set for Trans;
*------------------------------------------------------------*;
*------------------------------------------------------------*;
* FORMULA Data Set for Trans;
*------------------------------------------------------------*;
*------------------------------------------------------------*;
* EMNOTES File for Trans;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Trans_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* USERTRAINCODE File for Repl;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Repl_USERTRAINCODE.sas";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath";
file dspath;
run;
*------------------------------------------------------------*;
* NEWVALUES Data Set for Repl;
*------------------------------------------------------------*;
data WORK.Repl_NEWVALUES;
  length   Name                             $ 32
           LEVEL                            $ 12
           TYPE                             $ 1
           REPLACE_VALUE                    $ 200
           ;

  label    Name="Variable"
           LEVEL="Formatted Value"
           TYPE="Type"
           REPLACE_VALUE="Replacement Value"
           ;
Name="EDUCATION";
LEVEL="_UNKNOWN_";
TYPE="N";
REPLACE_VALUE="_DEFAULT_";
output;
Name="MARRIAGE";
LEVEL="_UNKNOWN_";
TYPE="N";
REPLACE_VALUE="_DEFAULT_";
output;
Name="PAY_0";
LEVEL="_UNKNOWN_";
TYPE="N";
REPLACE_VALUE="_DEFAULT_";
output;
Name="PAY_2";
LEVEL="_UNKNOWN_";
TYPE="N";
REPLACE_VALUE="_DEFAULT_";
output;
Name="PAY_3";
LEVEL="_UNKNOWN_";
TYPE="N";
REPLACE_VALUE="_DEFAULT_";
output;
Name="PAY_4";
LEVEL="_UNKNOWN_";
TYPE="N";
REPLACE_VALUE="_DEFAULT_";
output;
Name="PAY_5";
LEVEL="_UNKNOWN_";
TYPE="N";
REPLACE_VALUE="_DEFAULT_";
output;
Name="PAY_6";
LEVEL="_UNKNOWN_";
TYPE="N";
REPLACE_VALUE="_DEFAULT_";
output;
Name="SEX";
LEVEL="_UNKNOWN_";
TYPE="N";
REPLACE_VALUE="_DEFAULT_";
output;
Name="default_payment_next_month";
LEVEL="_UNKNOWN_";
TYPE="N";
REPLACE_VALUE="_DEFAULT_";
output;
;
run;
*------------------------------------------------------------*;
* EMNOTES File for Repl;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Repl_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* Decmeta Data Set for Reg;
*------------------------------------------------------------*;
data WORK.Reg_TI_default_payme_DM;
  length   _TYPE_                           $ 32
           VARIABLE                         $ 32
           LABEL                            $ 256
           LEVEL                            $ 32
           EVENT                            $ 32
           ORDER                            $ 10
           FORMAT                           $ 32
           TYPE                             $ 1
           COST                             $ 32
           USE                              $ 1
           ;

  label    _TYPE_="Type"
           VARIABLE="Variable"
           LABEL="Label"
           LEVEL="Measurement Level"
           EVENT="Target Event"
           ORDER="Order"
           FORMAT="Format"
           TYPE="Type"
           COST="Cost"
           USE="Use"
           ;
_TYPE_="MATRIX";
VARIABLE="";
LABEL="";
LEVEL="PROFIT";
EVENT="";
ORDER="";
FORMAT="";
TYPE="";
COST="";
USE="N";
output;
_TYPE_="TARGET";
VARIABLE="TI_default_payment_next_mon1";
LABEL="default_payment_next_month:1";
LEVEL="BINARY";
EVENT="1";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="";
output;
_TYPE_="DECISION";
VARIABLE="DECISION1";
LABEL="1";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="Y";
output;
_TYPE_="DECISION";
VARIABLE="DECISION2";
LABEL="0";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="Y";
output;
_TYPE_="DATAPRIOR";
VARIABLE="DATAPRIOR";
LABEL="Data Prior";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="N";
output;
_TYPE_="TRAINPRIOR";
VARIABLE="TRAINPRIOR";
LABEL="Training Prior";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="N";
output;
_TYPE_="DECPRIOR";
VARIABLE="DECPRIOR";
LABEL="Decision Prior";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="N";
output;
_TYPE_="PREDICTED";
VARIABLE="P_TI_default_payment_next_mon11";
LABEL="Predicted: TI_default_payment_next_mon1=1";
LEVEL="1";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="";
output;
_TYPE_="RESIDUAL";
VARIABLE="R_TI_default_payment_next_mon11";
LABEL="Residual: TI_default_payment_next_mon1=1";
LEVEL="1";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="";
output;
_TYPE_="PREDICTED";
VARIABLE="P_TI_default_payment_next_mon10";
LABEL="Predicted: TI_default_payment_next_mon1=0";
LEVEL="0";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="";
output;
_TYPE_="RESIDUAL";
VARIABLE="R_TI_default_payment_next_mon10";
LABEL="Residual: TI_default_payment_next_mon1=0";
LEVEL="0";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="";
output;
_TYPE_="FROM";
VARIABLE="F_TI_default_payment_next_mon1";
LABEL="From: TI_default_payment_next_mon1";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="C";
COST="";
USE="";
output;
_TYPE_="INTO";
VARIABLE="I_TI_default_payment_next_mon1";
LABEL="Into: TI_default_payment_next_mon1";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="C";
COST="";
USE="";
output;
;
run;
*------------------------------------------------------------*;
* Decdata Data Set for Reg;
*------------------------------------------------------------*;
data WORK.Reg_TI_default_payme_DD(label="TI_default_payment_next_mon1");
  length   TI_default_payment_next_mon1     $ 32
           COUNT                              8
           DATAPRIOR                          8
           TRAINPRIOR                         8
           DECPRIOR                           8
           DECISION1                          8
           DECISION2                          8
           ;

  label    COUNT="Level Counts"
           DATAPRIOR="Data Proportions"
           TRAINPRIOR="Training Proportions"
           DECPRIOR="Decision Priors"
           DECISION1="1"
           DECISION2="0"
           ;
TI_default_payment_next_mon1="1";
COUNT=3981;
DATAPRIOR=0.22117895438635;
TRAINPRIOR=0.22117895438635;
DECPRIOR=.;
DECISION1=1;
DECISION2=0;
output;
TI_default_payment_next_mon1="0";
COUNT=14018;
DATAPRIOR=0.77882104561364;
TRAINPRIOR=0.77882104561364;
DECPRIOR=.;
DECISION1=0;
DECISION2=1;
output;
;
run;
*------------------------------------------------------------*;
* EMNOTES File for Reg;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Reg_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* EMNOTES File for Part;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Part_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* Decmeta Data Set for Neural;
*------------------------------------------------------------*;
data WORK.Neural_TI_default_payme_DM;
  length   _TYPE_                           $ 32
           VARIABLE                         $ 32
           LABEL                            $ 256
           LEVEL                            $ 32
           EVENT                            $ 32
           ORDER                            $ 10
           FORMAT                           $ 32
           TYPE                             $ 1
           COST                             $ 32
           USE                              $ 1
           ;

  label    _TYPE_="Type"
           VARIABLE="Variable"
           LABEL="Label"
           LEVEL="Measurement Level"
           EVENT="Target Event"
           ORDER="Order"
           FORMAT="Format"
           TYPE="Type"
           COST="Cost"
           USE="Use"
           ;
_TYPE_="MATRIX";
VARIABLE="";
LABEL="";
LEVEL="PROFIT";
EVENT="";
ORDER="";
FORMAT="";
TYPE="";
COST="";
USE="N";
output;
_TYPE_="TARGET";
VARIABLE="TI_default_payment_next_mon1";
LABEL="default_payment_next_month:1";
LEVEL="BINARY";
EVENT="1";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="";
output;
_TYPE_="DECISION";
VARIABLE="DECISION1";
LABEL="1";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="Y";
output;
_TYPE_="DECISION";
VARIABLE="DECISION2";
LABEL="0";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="Y";
output;
_TYPE_="DATAPRIOR";
VARIABLE="DATAPRIOR";
LABEL="Data Prior";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="N";
output;
_TYPE_="TRAINPRIOR";
VARIABLE="TRAINPRIOR";
LABEL="Training Prior";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="N";
output;
_TYPE_="DECPRIOR";
VARIABLE="DECPRIOR";
LABEL="Decision Prior";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="N";
output;
_TYPE_="PREDICTED";
VARIABLE="P_TI_default_payment_next_mon11";
LABEL="Predicted: TI_default_payment_next_mon1=1";
LEVEL="1";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="";
output;
_TYPE_="RESIDUAL";
VARIABLE="R_TI_default_payment_next_mon11";
LABEL="Residual: TI_default_payment_next_mon1=1";
LEVEL="1";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="";
output;
_TYPE_="PREDICTED";
VARIABLE="P_TI_default_payment_next_mon10";
LABEL="Predicted: TI_default_payment_next_mon1=0";
LEVEL="0";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="";
output;
_TYPE_="RESIDUAL";
VARIABLE="R_TI_default_payment_next_mon10";
LABEL="Residual: TI_default_payment_next_mon1=0";
LEVEL="0";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="";
output;
_TYPE_="FROM";
VARIABLE="F_TI_default_payment_next_mon1";
LABEL="From: TI_default_payment_next_mon1";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="C";
COST="";
USE="";
output;
_TYPE_="INTO";
VARIABLE="I_TI_default_payment_next_mon1";
LABEL="Into: TI_default_payment_next_mon1";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="C";
COST="";
USE="";
output;
;
run;
*------------------------------------------------------------*;
* Decdata Data Set for Neural;
*------------------------------------------------------------*;
data WORK.Neural_TI_default_payme_DD(label="TI_default_payment_next_mon1");
  length   TI_default_payment_next_mon1     $ 32
           COUNT                              8
           DATAPRIOR                          8
           TRAINPRIOR                         8
           DECPRIOR                           8
           DECISION1                          8
           DECISION2                          8
           ;

  label    COUNT="Level Counts"
           DATAPRIOR="Data Proportions"
           TRAINPRIOR="Training Proportions"
           DECPRIOR="Decision Priors"
           DECISION1="1"
           DECISION2="0"
           ;
TI_default_payment_next_mon1="1";
COUNT=3981;
DATAPRIOR=0.22117895438635;
TRAINPRIOR=0.22117895438635;
DECPRIOR=.;
DECISION1=1;
DECISION2=0;
output;
TI_default_payment_next_mon1="0";
COUNT=14018;
DATAPRIOR=0.77882104561364;
TRAINPRIOR=0.77882104561364;
DECPRIOR=.;
DECISION1=0;
DECISION2=1;
output;
;
run;
*------------------------------------------------------------*;
* Decmeta Data Set for Neural;
*------------------------------------------------------------*;
data WORK.Neural_TI_default_pay1_DM;
  length   _TYPE_                           $ 32
           VARIABLE                         $ 32
           LABEL                            $ 256
           LEVEL                            $ 32
           EVENT                            $ 32
           ORDER                            $ 10
           FORMAT                           $ 32
           TYPE                             $ 1
           COST                             $ 32
           USE                              $ 1
           ;

  label    _TYPE_="Type"
           VARIABLE="Variable"
           LABEL="Label"
           LEVEL="Measurement Level"
           EVENT="Target Event"
           ORDER="Order"
           FORMAT="Format"
           TYPE="Type"
           COST="Cost"
           USE="Use"
           ;
_TYPE_="MATRIX";
VARIABLE="";
LABEL="";
LEVEL="PROFIT";
EVENT="";
ORDER="";
FORMAT="";
TYPE="";
COST="";
USE="N";
output;
_TYPE_="TARGET";
VARIABLE="TI_default_payment_next_mon2";
LABEL="default_payment_next_month:0";
LEVEL="BINARY";
EVENT="1";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="";
output;
_TYPE_="DECISION";
VARIABLE="DECISION1";
LABEL="1";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="Y";
output;
_TYPE_="DECISION";
VARIABLE="DECISION2";
LABEL="0";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="Y";
output;
_TYPE_="DATAPRIOR";
VARIABLE="DATAPRIOR";
LABEL="Data Prior";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="N";
output;
_TYPE_="TRAINPRIOR";
VARIABLE="TRAINPRIOR";
LABEL="Training Prior";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="N";
output;
_TYPE_="DECPRIOR";
VARIABLE="DECPRIOR";
LABEL="Decision Prior";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="N";
output;
_TYPE_="PREDICTED";
VARIABLE="P_TI_default_payment_next_mon21";
LABEL="Predicted: TI_default_payment_next_mon2=1";
LEVEL="1";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="";
output;
_TYPE_="RESIDUAL";
VARIABLE="R_TI_default_payment_next_mon21";
LABEL="Residual: TI_default_payment_next_mon2=1";
LEVEL="1";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="";
output;
_TYPE_="PREDICTED";
VARIABLE="P_TI_default_payment_next_mon20";
LABEL="Predicted: TI_default_payment_next_mon2=0";
LEVEL="0";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="";
output;
_TYPE_="RESIDUAL";
VARIABLE="R_TI_default_payment_next_mon20";
LABEL="Residual: TI_default_payment_next_mon2=0";
LEVEL="0";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="";
output;
_TYPE_="FROM";
VARIABLE="F_TI_default_payment_next_mon2";
LABEL="From: TI_default_payment_next_mon2";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="C";
COST="";
USE="";
output;
_TYPE_="INTO";
VARIABLE="I_TI_default_payment_next_mon2";
LABEL="Into: TI_default_payment_next_mon2";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="C";
COST="";
USE="";
output;
;
run;
*------------------------------------------------------------*;
* Decdata Data Set for Neural;
*------------------------------------------------------------*;
data WORK.Neural_TI_default_pay1_DD(label="TI_default_payment_next_mon2");
  length   TI_default_payment_next_mon2     $ 32
           COUNT                              8
           DATAPRIOR                          8
           TRAINPRIOR                         8
           DECPRIOR                           8
           DECISION1                          8
           DECISION2                          8
           ;

  label    COUNT="Level Counts"
           DATAPRIOR="Data Proportions"
           TRAINPRIOR="Training Proportions"
           DECPRIOR="Decision Priors"
           DECISION1="1"
           DECISION2="0"
           ;
TI_default_payment_next_mon2="1";
COUNT=14018;
DATAPRIOR=0.77882104561364;
TRAINPRIOR=0.77882104561364;
DECPRIOR=.;
DECISION1=1;
DECISION2=0;
output;
TI_default_payment_next_mon2="0";
COUNT=3981;
DATAPRIOR=0.22117895438635;
TRAINPRIOR=0.22117895438635;
DECPRIOR=.;
DECISION1=0;
DECISION2=1;
output;
;
run;
*------------------------------------------------------------*;
* EMNOTES File for Neural;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Neural_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* Variable Attributes for MdlComp;
*------------------------------------------------------------*;
data WORK.MdlComp_VariableAttribute;
length Variable $64 AttributeName $32 AttributeValue $64;
Variable='TI_default_payment_next_mon1';
AttributeName="USE";
AttributeValue='N';
Output;
Variable='default_payment_next_month';
AttributeName="USE";
AttributeValue='Y';
Output;
run;
*------------------------------------------------------------*;
* EMNOTES File for MdlComp;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"MdlComp_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* Variable Attributes for Ids;
*------------------------------------------------------------*;
data WORK.Ids_VariableAttribute;
length Variable $64 AttributeName $32 AttributeValue $64;
Variable='EDUCATION';
AttributeName="LEVEL";
AttributeValue='NOMINAL';
Output;
Variable='MARRIAGE';
AttributeName="LEVEL";
AttributeValue='NOMINAL';
Output;
Variable='PAY_0';
AttributeName="LEVEL";
AttributeValue='NOMINAL';
Output;
Variable='PAY_2';
AttributeName="LEVEL";
AttributeValue='NOMINAL';
Output;
Variable='PAY_3';
AttributeName="LEVEL";
AttributeValue='NOMINAL';
Output;
Variable='PAY_4';
AttributeName="LEVEL";
AttributeValue='NOMINAL';
Output;
Variable='PAY_5';
AttributeName="LEVEL";
AttributeValue='NOMINAL';
Output;
Variable='PAY_6';
AttributeName="LEVEL";
AttributeValue='NOMINAL';
Output;
Variable='SEX';
AttributeName="LEVEL";
AttributeValue='BINARY';
Output;
Variable='default_payment_next_month';
AttributeName="ROLE";
AttributeValue='TARGET';
Output;
Variable='default_payment_next_month';
AttributeName="LEVEL";
AttributeValue='BINARY';
Output;
run;
*------------------------------------------------------------*;
* Decmeta Data Set for Ids;
*------------------------------------------------------------*;
data WORK.Ids_default_payment__DM;
  length   _TYPE_                           $ 32
           VARIABLE                         $ 32
           LABEL                            $ 256
           LEVEL                            $ 32
           EVENT                            $ 32
           ORDER                            $ 10
           FORMAT                           $ 32
           TYPE                             $ 1
           COST                             $ 32
           USE                              $ 1
           ;

  label    _TYPE_="Type"
           VARIABLE="Variable"
           LABEL="Label"
           LEVEL="Measurement Level"
           EVENT="Target Event"
           ORDER="Order"
           FORMAT="Format"
           TYPE="Type"
           COST="Cost"
           USE="Use"
           ;
_TYPE_="MATRIX";
VARIABLE="";
LABEL="";
LEVEL="PROFIT";
EVENT="";
ORDER="";
FORMAT="";
TYPE="";
COST="";
USE="N";
output;
_TYPE_="TARGET";
VARIABLE="default_payment_next_month";
LABEL="default payment next month";
LEVEL="BINARY";
EVENT="1";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="";
output;
_TYPE_="DECISION";
VARIABLE="DECISION1";
LABEL="1";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="Y";
output;
_TYPE_="DECISION";
VARIABLE="DECISION2";
LABEL="0";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="Y";
output;
_TYPE_="DATAPRIOR";
VARIABLE="DATAPRIOR";
LABEL="Data Prior";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="N";
output;
_TYPE_="TRAINPRIOR";
VARIABLE="TRAINPRIOR";
LABEL="Training Prior";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="N";
output;
_TYPE_="DECPRIOR";
VARIABLE="DECPRIOR";
LABEL="Decision Prior";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="N";
output;
_TYPE_="PREDICTED";
VARIABLE="P_default_payment_next_month1";
LABEL="Predicted: default_payment_next_month=1";
LEVEL="1";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="";
output;
_TYPE_="RESIDUAL";
VARIABLE="R_default_payment_next_month1";
LABEL="Residual: default_payment_next_month=1";
LEVEL="1";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="";
output;
_TYPE_="PREDICTED";
VARIABLE="P_default_payment_next_month0";
LABEL="Predicted: default_payment_next_month=0";
LEVEL="0";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="";
output;
_TYPE_="RESIDUAL";
VARIABLE="R_default_payment_next_month0";
LABEL="Residual: default_payment_next_month=0";
LEVEL="0";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="";
output;
_TYPE_="FROM";
VARIABLE="F_default_payment_next_month";
LABEL="From: default_payment_next_month";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="C";
COST="";
USE="";
output;
_TYPE_="INTO";
VARIABLE="I_default_payment_next_month";
LABEL="Into: default_payment_next_month";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="C";
COST="";
USE="";
output;
;
run;
*------------------------------------------------------------*;
* Decdata Data Set for Ids;
*------------------------------------------------------------*;
data WORK.Ids_default_payment__DD;
  length   default_payment_next_month       $ 32
           COUNT                              8
           DATAPRIOR                          8
           TRAINPRIOR                         8
           DECPRIOR                           8
           DECISION1                          8
           DECISION2                          8
           ;

  label    COUNT="Level Counts"
           DATAPRIOR="Data Proportions"
           TRAINPRIOR="Training Proportions"
           DECPRIOR="Decision Priors"
           DECISION1="1"
           DECISION2="0"
           ;
  format   COUNT 10.
           ;
default_payment_next_month="1";
COUNT=6636;
DATAPRIOR=0.2212;
TRAINPRIOR=0.2212;
DECPRIOR=.;
DECISION1=1;
DECISION2=0;
output;
default_payment_next_month="0";
COUNT=23364;
DATAPRIOR=0.7788;
TRAINPRIOR=0.7788;
DECPRIOR=.;
DECISION1=0;
DECISION2=1;
output;
;
run;
*------------------------------------------------------------*;
* EMNOTES File for Ids;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Ids_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* USERTRAINCODE File for HPSVM;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"HPSVM_USERTRAINCODE.sas";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath";
file dspath;
run;
*------------------------------------------------------------*;
* EMNOTES File for HPSVM;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"HPSVM_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* USERTRAINCODE File for HPDMForest;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"HPDMForest_USERTRAINCODE.sas";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath";
file dspath;
run;
*------------------------------------------------------------*;
* EMNOTES File for HPDMForest;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"HPDMForest_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* EMNOTES File for Ensmbl;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Ensmbl_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* USERTRAINCODE File for Boost;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Boost_USERTRAINCODE.sas";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath";
file dspath;
run;
*------------------------------------------------------------*;
* EMNOTES File for Boost;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Boost_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* Create node properties data set;
*------------------------------------------------------------*;
data nodeprops;
length id $12 property $64 value $400;
id= "Tree";
property="Location";
value= "CATALOG";
output;
id= "Tree";
property="Catalog";
value= "SASHELP.EMMODL.TREE.SOURCE";
output;
id= "Tree";
property="ToolType";
value= "MODEL";
output;
id= "Tree";
property="TrainMode";
value= "BATCH";
output;
id= "Tree";
property="ImportModel";
value= "N";
output;
id= "Tree";
property="Freeze";
value= "N";
output;
id= "Tree";
property="UseMultipleTarget";
value= "N";
output;
id= "Tree";
property="Precision";
value= "4";
output;
id= "Tree";
property="IntervalCriterion";
value= "PROBF";
output;
id= "Tree";
property="NominalCriterion";
value= "PROBCHISQ";
output;
id= "Tree";
property="OrdinalCriterion";
value= "ENTROPY";
output;
id= "Tree";
property="SigLevel";
value= "0.2";
output;
id= "Tree";
property="Splitsize";
value= ".";
output;
id= "Tree";
property="LeafSize";
value= "5";
output;
id= "Tree";
property="MinCatSize";
value= "5";
output;
id= "Tree";
property="Maxbranch";
value= "2";
output;
id= "Tree";
property="Maxdepth";
value= "6";
output;
id= "Tree";
property="Nrules";
value= "5";
output;
id= "Tree";
property="Nsurrs";
value= "0";
output;
id= "Tree";
property="MissingValue";
value= "USEINSEARCH";
output;
id= "Tree";
property="UseVarOnce";
value= "N";
output;
id= "Tree";
property="SplitPrecision";
value= "4";
output;
id= "Tree";
property="Subtree";
value= "ASSESSMENT";
output;
id= "Tree";
property="NSubtree";
value= "1";
output;
id= "Tree";
property="AssessMeasure";
value= "PROFIT/LOSS";
output;
id= "Tree";
property="AssessPercentage";
value= "0.25";
output;
id= "Tree";
property="NodeSample";
value= "20000";
output;
id= "Tree";
property="Exhaustive";
value= "5000";
output;
id= "Tree";
property="Kass";
value= "Y";
output;
id= "Tree";
property="KassApply";
value= "BEFORE";
output;
id= "Tree";
property="Depth";
value= "Y";
output;
id= "Tree";
property="Inputs";
value= "N";
output;
id= "Tree";
property="NumInputs";
value= "1";
output;
id= "Tree";
property="VarSelection";
value= "Y";
output;
id= "Tree";
property="Leafid";
value= "Y";
output;
id= "Tree";
property="NodeRole";
value= "SEGMENT";
output;
id= "Tree";
property="Performance";
value= "DISK";
output;
id= "Tree";
property="CV";
value= "N";
output;
id= "Tree";
property="CVNIter";
value= "10";
output;
id= "Tree";
property="CVRepeat";
value= "1";
output;
id= "Tree";
property="CVSeed";
value= "12345";
output;
id= "Tree";
property="ObsImportance";
value= "N";
output;
id= "Tree";
property="NumSingleImp";
value= "5";
output;
id= "Tree";
property="UseDecision";
value= "N";
output;
id= "Tree";
property="UsePriors";
value= "N";
output;
id= "Tree";
property="ClassColorBy";
value= "PERCENTCORRECT";
output;
id= "Tree";
property="IntColorBy";
value= "AVG";
output;
id= "Tree";
property="ShowNodeId";
value= "Y";
output;
id= "Tree";
property="ShowValid";
value= "Y";
output;
id= "Tree";
property="Pred";
value= "N";
output;
id= "Tree";
property="Target";
value= "ALL";
output;
id= "Tree";
property="Count";
value= "Y";
output;
id= "Tree";
property="ProfitLoss";
value= "NONE";
output;
id= "Tree";
property="PercentCorrect";
value= "N";
output;
id= "Tree";
property="AVG";
value= "Y";
output;
id= "Tree";
property="RASE";
value= "N";
output;
id= "Tree";
property="CreateSample";
value= "DEFAULT";
output;
id= "Tree";
property="SampleMethod";
value= "RANDOM";
output;
id= "Tree";
property="SampleSize";
value= "10000";
output;
id= "Tree";
property="SampleSeed";
value= "12345";
output;
id= "Tree";
property="ForceRun";
value= "N";
output;
id= "Tree";
property="RunAction";
value= "Train";
output;
id= "Tree";
property="Component";
value= "DecisionTree";
output;
id= "Tree";
property="Criterion";
value= "DEFAULT";
output;
id= "Tree";
property="Dummy";
value= "N";
output;
id= "Tree";
property="Predict";
value= "Y";
output;
id= "Tree";
property="ImportedTreeData";
value= "";
output;
id= "Tree";
property="ToolPrefix";
value= "Tree";
output;
id= "Tree";
property="EM_FILE_USERTRAINCODE";
value= "Tree_USERTRAINCODE.sas";
output;
id= "Tree";
property="EM_FILE_EMNOTES";
value= "Tree_EMNOTES.txt";
output;
id= "Trans";
property="DefaultMethod";
value= "MAX_NORM";
output;
id= "Trans";
property="DefaultTargetMethod";
value= "NONE";
output;
id= "Trans";
property="DefaultClassMethod";
value= "NONE";
output;
id= "Trans";
property="DefaultClassTargetMethod";
value= "DUMMY";
output;
id= "Trans";
property="Offset";
value= "1";
output;
id= "Trans";
property="MinOffset";
value= "Y";
output;
id= "Trans";
property="HideVariable";
value= "Y";
output;
id= "Trans";
property="RejectVariable";
value= "Y";
output;
id= "Trans";
property="GroupCutoff";
value= "0.1";
output;
id= "Trans";
property="GroupMissing";
value= "N";
output;
id= "Trans";
property="EmRandomSeed";
value= "12345";
output;
id= "Trans";
property="EmSampleSize";
value= "DEFAULT";
output;
id= "Trans";
property="EmSampleMethod";
value= "FIRSTN";
output;
id= "Trans";
property="MissingValue";
value= "USEINSEARCH";
output;
id= "Trans";
property="SummaryVariables";
value= "TRANSFORMED";
output;
id= "Trans";
property="SummaryStatistics";
value= "Y";
output;
id= "Trans";
property="UseMetaTransform";
value= "Y";
output;
id= "Trans";
property="MissingAsLevel";
value= "N";
output;
id= "Trans";
property="NumberofBins";
value= "VARIABLES";
output;
id= "Trans";
property="MaxOptimalBins";
value= "4";
output;
id= "Trans";
property="ForceRun";
value= "N";
output;
id= "Trans";
property="RunAction";
value= "Train";
output;
id= "Trans";
property="Component";
value= "Transform";
output;
id= "Trans";
property="EM_FILE_EMNOTES";
value= "Trans_EMNOTES.txt";
output;
id= "Repl";
property="Location";
value= "CATALOG";
output;
id= "Repl";
property="Catalog";
value= "SASHELP.EMMDFY.REPLACE.SOURCE";
output;
id= "Repl";
property="HideVariable";
value= "N";
output;
id= "Repl";
property="UnknownLevel";
value= "NONE";
output;
id= "Repl";
property="ReplaceMethod";
value= "COMPUTED";
output;
id= "Repl";
property="CalcMethod";
value= "STDDEV";
output;
id= "Repl";
property="MADSCutoff";
value= "9.0";
output;
id= "Repl";
property="SpacingsCutoff";
value= "9.0";
output;
id= "Repl";
property="StddevCutoff";
value= "3.0";
output;
id= "Repl";
property="PercentsCutoff";
value= "0.5";
output;
id= "Repl";
property="CountReport";
value= "Y";
output;
id= "Repl";
property="ForceRun";
value= "N";
output;
id= "Repl";
property="RunAction";
value= "Train";
output;
id= "Repl";
property="Component";
value= "Replace";
output;
id= "Repl";
property="IntervalMethod";
value= "NONE";
output;
id= "Repl";
property="DataNeeded";
value= "Y";
output;
id= "Repl";
property="ToolType";
value= "MODIFY";
output;
id= "Repl";
property="ToolPrefix";
value= "Repl";
output;
id= "Repl";
property="EM_FILE_USERTRAINCODE";
value= "Repl_USERTRAINCODE.sas";
output;
id= "Repl";
property="EM_DATA_NEWVALUES";
value= "WORK.Repl_NEWVALUES";
output;
id= "Repl";
property="EM_FILE_EMNOTES";
value= "Repl_EMNOTES.txt";
output;
id= "Reg";
property="MainEffect";
value= "Y";
output;
id= "Reg";
property="TwoFactor";
value= "N";
output;
id= "Reg";
property="Polynomial";
value= "N";
output;
id= "Reg";
property="PolynomialDegree";
value= "2";
output;
id= "Reg";
property="Terms";
value= "N";
output;
id= "Reg";
property="Error";
value= "LOGISTIC";
output;
id= "Reg";
property="LinkFunction";
value= "LOGIT";
output;
id= "Reg";
property="SuppressIntercept";
value= "N";
output;
id= "Reg";
property="InputCoding";
value= "DEVIATION";
output;
id= "Reg";
property="MinResourceUse";
value= "N";
output;
id= "Reg";
property="ModelSelection";
value= "STEPWISE";
output;
id= "Reg";
property="SelectionCriterion";
value= "DEFAULT";
output;
id= "Reg";
property="SelectionDefault";
value= "Y";
output;
id= "Reg";
property="Sequential";
value= "N";
output;
id= "Reg";
property="SlEntry";
value= "0.05";
output;
id= "Reg";
property="SlStay";
value= "0.05";
output;
id= "Reg";
property="Start";
value= "0";
output;
id= "Reg";
property="Stop";
value= "0";
output;
id= "Reg";
property="Force";
value= "0";
output;
id= "Reg";
property="Hierarchy";
value= "CLASS";
output;
id= "Reg";
property="Rule";
value= "NONE";
output;
id= "Reg";
property="MaxStep";
value= ".";
output;
id= "Reg";
property="StepOutput";
value= "N";
output;
id= "Reg";
property="OptimizationTechnique";
value= "DEFAULT";
output;
id= "Reg";
property="ModelDefaults";
value= "Y";
output;
id= "Reg";
property="MaxIterations";
value= ".";
output;
id= "Reg";
property="MaxFunctionCalls";
value= ".";
output;
id= "Reg";
property="MaxCPUTime";
value= "1 HOUR";
output;
id= "Reg";
property="ConvDefaults";
value= "Y";
output;
id= "Reg";
property="AbsConvValue";
value= "-1.34078E154";
output;
id= "Reg";
property="AbsFValue";
value= "0";
output;
id= "Reg";
property="AbsFTime";
value= "1";
output;
id= "Reg";
property="AbsGValue";
value= "0.00001";
output;
id= "Reg";
property="AbsGTime";
value= "1";
output;
id= "Reg";
property="AbsXValue";
value= "1E-8";
output;
id= "Reg";
property="AbsXTime";
value= "1";
output;
id= "Reg";
property="FConvValue";
value= "0";
output;
id= "Reg";
property="FConvTimes";
value= "1";
output;
id= "Reg";
property="GConvValue";
value= "1E-6";
output;
id= "Reg";
property="GConvTimes";
value= "1";
output;
id= "Reg";
property="ClParm";
value= "N";
output;
id= "Reg";
property="Covout";
value= "N";
output;
id= "Reg";
property="CovB";
value= "N";
output;
id= "Reg";
property="CorB";
value= "N";
output;
id= "Reg";
property="Simple";
value= "N";
output;
id= "Reg";
property="SuppressOutput";
value= "N";
output;
id= "Reg";
property="Details";
value= "N";
output;
id= "Reg";
property="PrintDesignMatrix";
value= "N";
output;
id= "Reg";
property="SASSPDS";
value= "N";
output;
id= "Reg";
property="Performance";
value= "N";
output;
id= "Reg";
property="ExcludedVariable";
value= "REJECT";
output;
id= "Reg";
property="ForceRun";
value= "N";
output;
id= "Reg";
property="RunAction";
value= "Train";
output;
id= "Reg";
property="Component";
value= "Regression";
output;
id= "Reg";
property="Interactions";
value= "";
output;
id= "Reg";
property="EM_DECMETA_TI_default_payment_next_mon1";
value= "WORK.Reg_TI_default_payme_DM";
output;
id= "Reg";
property="EM_DECDATA_TI_default_payment_next_mon1";
value= "WORK.Reg_TI_default_payme_DD";
output;
id= "Reg";
property="EM_FILE_EMNOTES";
value= "Reg_EMNOTES.txt";
output;
id= "Part";
property="Method";
value= "DEFAULT";
output;
id= "Part";
property="TrainPct";
value= "60";
output;
id= "Part";
property="ValidatePct";
value= "30";
output;
id= "Part";
property="TestPct";
value= "10";
output;
id= "Part";
property="RandomSeed";
value= "12345";
output;
id= "Part";
property="OutputType";
value= "DATA";
output;
id= "Part";
property="IntervalDistribution";
value= "Y";
output;
id= "Part";
property="ClassDistribution";
value= "Y";
output;
id= "Part";
property="ForceRun";
value= "N";
output;
id= "Part";
property="RunAction";
value= "Train";
output;
id= "Part";
property="Component";
value= "Partition";
output;
id= "Part";
property="EM_FILE_EMNOTES";
value= "Part_EMNOTES.txt";
output;
id= "Neural";
property="UseEstimates";
value= "N";
output;
id= "Neural";
property="NetworkArchitecture";
value= "MLP";
output;
id= "Neural";
property="DirectConnection";
value= "N";
output;
id= "Neural";
property="Hidden";
value= "3";
output;
id= "Neural";
property="Prelim";
value= "Y";
output;
id= "Neural";
property="PreliminaryRuns";
value= "5";
output;
id= "Neural";
property="PrelimMaxiter";
value= "10";
output;
id= "Neural";
property="PrelimMaxTime";
value= "1 HOUR";
output;
id= "Neural";
property="Maxiter";
value= "50";
output;
id= "Neural";
property="Maxtime";
value= "4 HOURS";
output;
id= "Neural";
property="TrainingTechnique";
value= "DEFAULT";
output;
id= "Neural";
property="ConvDefaults";
value= "Y";
output;
id= "Neural";
property="AbsConvValue";
value= "-1.34078E154";
output;
id= "Neural";
property="AbsFValue";
value= "0";
output;
id= "Neural";
property="AbsFTime";
value= "1";
output;
id= "Neural";
property="AbsGValue";
value= "0.00001";
output;
id= "Neural";
property="AbsGTime";
value= "1";
output;
id= "Neural";
property="AbsXValue";
value= "1E-8";
output;
id= "Neural";
property="AbsXTime";
value= "1";
output;
id= "Neural";
property="FConvValue";
value= "0";
output;
id= "Neural";
property="FConvTime";
value= "1";
output;
id= "Neural";
property="GConvValue";
value= "1E-6";
output;
id= "Neural";
property="GConvTime";
value= "1";
output;
id= "Neural";
property="ModelSelectionCriterion";
value= "MISCLASSIFICATION";
output;
id= "Neural";
property="SuppressOutput";
value= "N";
output;
id= "Neural";
property="Residuals";
value= "Y";
output;
id= "Neural";
property="Standardizations";
value= "N";
output;
id= "Neural";
property="HiddenUnits";
value= "N";
output;
id= "Neural";
property="TrainCode";
value= "";
output;
id= "Neural";
property="PrelimOutest";
value= "";
output;
id= "Neural";
property="Outest";
value= "";
output;
id= "Neural";
property="Outfit";
value= "";
output;
id= "Neural";
property="InitialDs";
value= "";
output;
id= "Neural";
property="CodefileRes";
value= "";
output;
id= "Neural";
property="CodefileNoRes";
value= "";
output;
id= "Neural";
property="AddHidden";
value= "Y";
output;
id= "Neural";
property="HiddenCombFunction";
value= "DEFAULT";
output;
id= "Neural";
property="HiddenActivation";
value= "DEFAULT";
output;
id= "Neural";
property="HiddenBias";
value= "Y";
output;
id= "Neural";
property="TargetCombFunction";
value= "DEFAULT";
output;
id= "Neural";
property="TargetActivation";
value= "DEFAULT";
output;
id= "Neural";
property="TargetError";
value= "DEFAULT";
output;
id= "Neural";
property="TargetBias";
value= "Y";
output;
id= "Neural";
property="InitialSeed";
value= "12345";
output;
id= "Neural";
property="RandDist";
value= "NORMAL";
output;
id= "Neural";
property="RandScale";
value= "0.1";
output;
id= "Neural";
property="RandLoc";
value= "0";
output;
id= "Neural";
property="InputStandardization";
value= "STD";
output;
id= "Neural";
property="WeightDecay";
value= "0";
output;
id= "Neural";
property="Accelerate";
value= "1.2";
output;
id= "Neural";
property="Decelerate";
value= "0.5";
output;
id= "Neural";
property="Learn";
value= "0.1";
output;
id= "Neural";
property="MaxLearn";
value= "50";
output;
id= "Neural";
property="MinLearn";
value= "0.00001";
output;
id= "Neural";
property="Momentum";
value= "0";
output;
id= "Neural";
property="MaxMomentum";
value= "1.75";
output;
id= "Neural";
property="Tilt";
value= "0";
output;
id= "Neural";
property="ForceRun";
value= "N";
output;
id= "Neural";
property="RunAction";
value= "Train";
output;
id= "Neural";
property="Component";
value= "NeuralNetwork";
output;
id= "Neural";
property="EM_DECMETA_TI_default_payment_next_mon1";
value= "WORK.Neural_TI_default_payme_DM";
output;
id= "Neural";
property="EM_DECDATA_TI_default_payment_next_mon1";
value= "WORK.Neural_TI_default_payme_DD";
output;
id= "Neural";
property="EM_DECMETA_TI_default_payment_next_mon2";
value= "WORK.Neural_TI_default_pay1_DM";
output;
id= "Neural";
property="EM_DECDATA_TI_default_payment_next_mon2";
value= "WORK.Neural_TI_default_pay1_DD";
output;
id= "Neural";
property="EM_FILE_EMNOTES";
value= "Neural_EMNOTES.txt";
output;
id= "MdlComp";
property="NumberOfReportedLevels";
value= "1E-6";
output;
id= "MdlComp";
property="NormalizeReportingVariables";
value= "Y";
output;
id= "MdlComp";
property="DecileBin";
value= "20";
output;
id= "MdlComp";
property="LiftEpsilon";
value= "1E-6";
output;
id= "MdlComp";
property="ProfitEpsilon";
value= "1E-6";
output;
id= "MdlComp";
property="RoiEpsilon";
value= "1E-6";
output;
id= "MdlComp";
property="ScoreDistBin";
value= "20";
output;
id= "MdlComp";
property="RocChart";
value= "Y";
output;
id= "MdlComp";
property="RocEpsilon";
value= "0.01";
output;
id= "MdlComp";
property="AssessAllTargetLevels";
value= "N";
output;
id= "MdlComp";
property="SelectionData";
value= "DEFAULT";
output;
id= "MdlComp";
property="HPCriteria";
value= "DEFAULT";
output;
id= "MdlComp";
property="intervalViyaCriteria";
value= "DEFAULT";
output;
id= "MdlComp";
property="classViyaCriteria";
value= "DEFAULT";
output;
id= "MdlComp";
property="SelectionTable";
value= "VALIDATE";
output;
id= "MdlComp";
property="SelectionCriteria";
value= "_MISC_";
output;
id= "MdlComp";
property="SelectionDepth";
value= "10";
output;
id= "MdlComp";
property="NumberofBins";
value= "20";
output;
id= "MdlComp";
property="RecomputeAssess";
value= "N";
output;
id= "MdlComp";
property="TargetName";
value= "default_payment_next_month";
output;
id= "MdlComp";
property="ModelId";
value= "HPDMForest";
output;
id= "MdlComp";
property="ModelDescription";
value= "HP Forest";
output;
id= "MdlComp";
property="ModelCriteria";
value= "Valid: Misclassification Rate";
output;
id= "MdlComp";
property="ForceRun";
value= "N";
output;
id= "MdlComp";
property="RunAction";
value= "Train";
output;
id= "MdlComp";
property="Component";
value= "ModelCompare";
output;
id= "MdlComp";
property="StatisticUsed";
value= "_VMISC_";
output;
id= "MdlComp";
property="TargetLabel";
value= "default payment next month";
output;
id= "MdlComp";
property="EM_VARIABLEATTRIBUTES";
value= "WORK.MdlComp_VariableAttribute";
output;
id= "MdlComp";
property="EM_FILE_EMNOTES";
value= "MdlComp_EMNOTES.txt";
output;
id= "Ids";
property="DataSource";
value= "creditcardspayments";
output;
id= "Ids";
property="Scope";
value= "LOCAL";
output;
id= "Ids";
property="Role";
value= "RAW";
output;
%let Ids_lib = %scan(&Ids_data, 1, .);
id= "Ids";
property="Library";
value= "&Ids_lib";
output;
%let Ids_member = %scan(&Ids_data, 2, .);
id= "Ids";
property="Table";
value= "&Ids_member";
output;
id= "Ids";
property="NCols";
value= "24";
output;
id= "Ids";
property="NObs";
value= "30000";
output;
id= "Ids";
property="NBytes";
value= "5899264";
output;
id= "Ids";
property="Segment";
value= "";
output;
id= "Ids";
property="DataSourceRole";
value= "RAW";
output;
id= "Ids";
property="OutputType";
value= "VIEW";
output;
id= "Ids";
property="ForceRun";
value= "N";
output;
id= "Ids";
property="ComputeStatistics";
value= "N";
output;
id= "Ids";
property="DataSelection";
value= "&Ids_source";
output;
id= "Ids";
property="NewTable";
value= "&Ids_newdata";
output;
id= "Ids";
property="MetaAdvisor";
value= "BASIC";
output;
id= "Ids";
property="ApplyIntervalLevelLowerLimit";
value= "Y";
output;
id= "Ids";
property="IntervalLowerLimit";
value= "20";
output;
id= "Ids";
property="ApplyMaxPercentMissing";
value= "Y";
output;
id= "Ids";
property="MaxPercentMissing";
value= "50";
output;
id= "Ids";
property="ApplyMaxClassLevels";
value= "Y";
output;
id= "Ids";
property="MaxClassLevels";
value= "20";
output;
id= "Ids";
property="IdentifyEmptyColumns";
value= "Y";
output;
id= "Ids";
property="VariableValidation";
value= "STRICT";
output;
id= "Ids";
property="NewVariableRole";
value= "REJECT";
output;
id= "Ids";
property="DropMapVariables";
value= "Y";
output;
id= "Ids";
property="DsId";
value= "creditcardspayments";
output;
id= "Ids";
property="DsSampleName";
value= "";
output;
id= "Ids";
property="DsSampleSizeType";
value= "";
output;
id= "Ids";
property="DsSampleSize";
value= "";
output;
id= "Ids";
property="DsCreatedBy";
value= "dennisorellana20";
output;
id= "Ids";
property="DsCreateDate";
value= "1910118911.8";
output;
id= "Ids";
property="DsModifiedBy";
value= "dennisorellana20";
output;
id= "Ids";
property="DsModifyDate";
value= "1910118911.8";
output;
id= "Ids";
property="DsScope";
value= "LOCAL";
output;
id= "Ids";
property="Sample";
value= "D";
output;
id= "Ids";
property="SampleSizeType";
value= "PERCENT";
output;
id= "Ids";
property="SampleSizePercent";
value= "20";
output;
id= "Ids";
property="SampleSizeObs";
value= "10000";
output;
id= "Ids";
property="DBPassThrough";
value= "Y";
output;
id= "Ids";
property="RunAction";
value= "Train";
output;
id= "Ids";
property="Component";
value= "DataSource";
output;
id= "Ids";
property="Description";
value= "";
output;
id= "Ids";
property="EM_VARIABLEATTRIBUTES";
value= "WORK.Ids_VariableAttribute";
output;
id= "Ids";
property="EM_DECMETA_default_payment_next_month";
value= "WORK.Ids_default_payment__DM";
output;
id= "Ids";
property="EM_DECDATA_default_payment_next_month";
value= "WORK.Ids_default_payment__DD";
output;
id= "Ids";
property="EM_FILE_EMNOTES";
value= "Ids_EMNOTES.txt";
output;
id= "HPSVM";
property="Location";
value= "CATALOG";
output;
id= "HPSVM";
property="Catalog";
value= "SASHELP.HPDM.HPSVM.SOURCE";
output;
id= "HPSVM";
property="maxiter";
value= "25";
output;
id= "HPSVM";
property="missaslvl";
value= "N";
output;
id= "HPSVM";
property="tolerance";
value= "0.000001";
output;
id= "HPSVM";
property="penalty";
value= "1";
output;
id= "HPSVM";
property="method";
value= "ACTIVESET";
output;
id= "HPSVM";
property="interiorpointkernel";
value= "LINEAR";
output;
id= "HPSVM";
property="interiorpointdegree";
value= "2";
output;
id= "HPSVM";
property="activesetkernel";
value= "POLYNOM";
output;
id= "HPSVM";
property="activesetdegree";
value= "2";
output;
id= "HPSVM";
property="rbfparameter";
value= "1";
output;
id= "HPSVM";
property="sigmoidparameter1";
value= "1";
output;
id= "HPSVM";
property="sigmoidparameter2";
value= "-1";
output;
id= "HPSVM";
property="ForceRun";
value= "N";
output;
id= "HPSVM";
property="RunAction";
value= "Train";
output;
id= "HPSVM";
property="Component";
value= "HPDMSVM";
output;
id= "HPSVM";
property="ToolType";
value= "MODEL";
output;
id= "HPSVM";
property="ToolPrefix";
value= "HPSVM";
output;
id= "HPSVM";
property="EM_FILE_USERTRAINCODE";
value= "HPSVM_USERTRAINCODE.sas";
output;
id= "HPSVM";
property="EM_FILE_EMNOTES";
value= "HPSVM_EMNOTES.txt";
output;
id= "HPDMForest";
property="Location";
value= "CATALOG";
output;
id= "HPDMForest";
property="Catalog";
value= "SASHELP.HPDM.HPDMForest.SOURCE";
output;
id= "HPDMForest";
property="ToolType";
value= "MODEL";
output;
id= "HPDMForest";
property="ALPHA";
value= "0.05";
output;
id= "HPDMForest";
property="CATBINS";
value= "30";
output;
id= "HPDMForest";
property="EXHAUSTIVE";
value= "5000";
output;
id= "HPDMForest";
property="LEAFSIZEMETHOD";
value= "DEFAULT";
output;
id= "HPDMForest";
property="LEAFFRACTION";
value= "0.00001";
output;
id= "HPDMForest";
property="LEAFSIZE";
value= "1";
output;
id= "HPDMForest";
property="MAXDEPTH";
value= "50";
output;
id= "HPDMForest";
property="MAXTREES";
value= "100";
output;
id= "HPDMForest";
property="MINCATSIZE";
value= "5";
output;
id= "HPDMForest";
property="SEED";
value= "12345";
output;
id= "HPDMForest";
property="SPLITSIZE";
value= ".";
output;
id= "HPDMForest";
property="NUMOBSMETHOD";
value= "PERCENTAGE";
output;
id= "HPDMForest";
property="TRAINFRACTION";
value= "0.6";
output;
id= "HPDMForest";
property="TRAINN";
value= ".";
output;
id= "HPDMForest";
property="VARS_TO_TRY";
value= ".";
output;
id= "HPDMForest";
property="MISSING";
value= "USEINSEARCH";
output;
id= "HPDMForest";
property="MINUSEINSEARCH";
value= "1";
output;
id= "HPDMForest";
property="MODELING";
value= "Y";
output;
id= "HPDMForest";
property="VARSELECT";
value= "Y";
output;
id= "HPDMForest";
property="VIMETHOD";
value= "LOSSREDUCTION";
output;
id= "HPDMForest";
property="RBATOPNUM";
value= "25";
output;
id= "HPDMForest";
property="RBACUT";
value= "0.01";
output;
id= "HPDMForest";
property="ForceRun";
value= "N";
output;
id= "HPDMForest";
property="RunAction";
value= "Train";
output;
id= "HPDMForest";
property="Component";
value= "HPDMForest";
output;
id= "HPDMForest";
property="ToolPrefix";
value= "HPDMForest";
output;
id= "HPDMForest";
property="EM_FILE_USERTRAINCODE";
value= "HPDMForest_USERTRAINCODE.sas";
output;
id= "HPDMForest";
property="EM_FILE_EMNOTES";
value= "HPDMForest_EMNOTES.txt";
output;
id= "Ensmbl";
property="Predicted";
value= "MAX";
output;
id= "Ensmbl";
property="Posterior";
value= "MAX";
output;
id= "Ensmbl";
property="VotingPosterior";
value= "AVERAGE";
output;
id= "Ensmbl";
property="ForceRun";
value= "N";
output;
id= "Ensmbl";
property="RunAction";
value= "Train";
output;
id= "Ensmbl";
property="Component";
value= "Ensemble";
output;
id= "Ensmbl";
property="EM_FILE_EMNOTES";
value= "Ensmbl_EMNOTES.txt";
output;
id= "Boost";
property="Location";
value= "CATALOG";
output;
id= "Boost";
property="Catalog";
value= "SASHELP.EMMODL.BOOST.SOURCE";
output;
id= "Boost";
property="ToolType";
value= "MODEL";
output;
id= "Boost";
property="Iterations";
value= "10";
output;
id= "Boost";
property="CategoricalBins";
value= "30";
output;
id= "Boost";
property="IntervalBins";
value= "100";
output;
id= "Boost";
property="TrainProportion";
value= "60";
output;
id= "Boost";
property="Seed";
value= "12345";
output;
id= "Boost";
property="Shrinkage";
value= "0.1";
output;
id= "Boost";
property="LeafFraction";
value= "0.001";
output;
id= "Boost";
property="SplitSize";
value= ".";
output;
id= "Boost";
property="MinCatSize";
value= "5";
output;
id= "Boost";
property="MaxBranch";
value= "2";
output;
id= "Boost";
property="MaxDepth";
value= "2";
output;
id= "Boost";
property="NSurrs";
value= "0";
output;
id= "Boost";
property="Missing";
value= "USEINSEARCH";
output;
id= "Boost";
property="Huber";
value= "NO";
output;
id= "Boost";
property="ReUseVar";
value= "1";
output;
id= "Boost";
property="AssessMeasure";
value= "PROFIT";
output;
id= "Boost";
property="NodeSize";
value= "20000";
output;
id= "Boost";
property="Exhaustive";
value= "5000";
output;
id= "Boost";
property="VarSelection";
value= "Y";
output;
id= "Boost";
property="Performance";
value= "DISK";
output;
id= "Boost";
property="SubSeries";
value= "BEST";
output;
id= "Boost";
property="IterationNum";
value= "1";
output;
id= "Boost";
property="ObsImportance";
value= "N";
output;
id= "Boost";
property="NumSingleImp";
value= "5";
output;
id= "Boost";
property="CreateHStat";
value= "N";
output;
id= "Boost";
property="ForceRun";
value= "N";
output;
id= "Boost";
property="RunAction";
value= "Train";
output;
id= "Boost";
property="Component";
value= "Boost";
output;
id= "Boost";
property="Precision";
value= "0";
output;
id= "Boost";
property="Measure";
value= "PROFIT";
output;
id= "Boost";
property="NumPairImp";
value= "0";
output;
id= "Boost";
property="DataNeeded";
value= "Y";
output;
id= "Boost";
property="ToolPrefix";
value= "Boost";
output;
id= "Boost";
property="EM_FILE_USERTRAINCODE";
value= "Boost_USERTRAINCODE.sas";
output;
id= "Boost";
property="EM_FILE_EMNOTES";
value= "Boost_EMNOTES.txt";
output;
run;
*------------------------------------------------------------*;
* Create connections data set;
*------------------------------------------------------------*;
data connect;
length from to $12;
from="Ensmbl";
to="MdlComp";
output;
from="Boost";
to="MdlComp";
output;
from="HPDMForest";
to="MdlComp";
output;
from="HPSVM";
to="MdlComp";
output;
from="Tree";
to="Ensmbl";
output;
from="Neural";
to="Ensmbl";
output;
from="HPSVM";
to="Ensmbl";
output;
from="Repl";
to="Part";
output;
from="Ids";
to="Repl";
output;
from="Reg";
to="Ensmbl";
output;
from="Trans";
to="Reg";
output;
from="Trans";
to="Neural";
output;
from="Part";
to="Trans";
output;
from="Part";
to="HPDMForest";
output;
from="Part";
to="Boost";
output;
from="Part";
to="HPSVM";
output;
from="Part";
to="Tree";
output;
run;
*------------------------------------------------------------*;
* Create actions to run data set;
*------------------------------------------------------------*;
%macro emaction;
%let actionstring = %upcase(&EM_ACTION);
%if %index(&actionstring, RUN) or %index(&actionstring, REPORT) %then %do;
data actions;
length id $12 action $40;
id="MdlComp";
%if %index(&actionstring, RUN) %then %do;
action='run';
output;
%end;
%if %index(&actionstring, REPORT) %then %do;
action='report';
output;
%end;
run;
%end;
%mend;
%emaction;
*------------------------------------------------------------*;
* Execute the actions;
*------------------------------------------------------------*;
%em5batch(execute, workspace=workspace, nodes=nodes, connect=connect, datasources=datasources, nodeprops=nodeprops, action=actions);
