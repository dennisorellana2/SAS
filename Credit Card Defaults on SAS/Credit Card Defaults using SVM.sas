*------------------------------------------------------------*;
* EM Version: 15.1;
* SAS Release: 9.04.01M6P110718;
* Host: odaws01-usw2.oda.sas.com;
* Project Path: ~;
* Project Name: DO_Assignment 2;
* Diagram Id: EMWS1;
* Diagram Name: SVM;
* Generated by: dennisorellana20;
* Date: 15AUG2020:18:00:36;
*------------------------------------------------------------*;
*------------------------------------------------------------*;
* Macro Variables;
*------------------------------------------------------------*;
%let EM_PROJECT =;
%let EM_PROJECTNAME =;
%let EM_WSNAME =;
%let EM_WSDESCRIPTION =SVM;
%let EM_SUMMARY =WORK.SUMMARY;
%let EM_NUMTASKS =SINGLE;
%let EM_EDITMODE =R;
%let EM_DEBUGVAL =;
%let EM_ACTION =run report;
*------------------------------------------------------------*;
%macro em_usedatatable;
%if ^%symexist(EM_USEDATATABLE) %then %do;
%let EM_USEDATATABLE = Y;
%end;
%if "&EM_USEDATATABLE" ne "N" %then %do;
*------------------------------------------------------------*;
* Data Tables;
*------------------------------------------------------------*;
*------------------------------------------------------------*;
%end;
%mend em_usedatatable;
%em_usedatatable;
*------------------------------------------------------------*;
* Create workspace data set;
*------------------------------------------------------------*;
data workspace;
length property $64 value $200;
property= 'PROJECTLOCATION';
value= "&EM_PROJECT";
output;
property= 'PROJECTNAME';
value= "&EM_PROJECTNAME";
output;
property= 'WORKSPACENAME';
value= "&EM_WSNAME";
output;
property= 'WORKSPACEDESCRIPTION';
value= "&EM_WSDESCRIPTION";
output;
property= 'SUMMARYDATASET';
value= "&EM_SUMMARY";
output;
property= 'NUMTASKS';
value= "&EM_NUMTASKS";
output;
property= 'EDITMODE';
value= "&EM_EDITMODE";
output;
property= 'DEBUG';
value= "&EM_DEBUGVAL";
output;
run;
*------------------------------------------------------------*;
* Create nodes data set;
*------------------------------------------------------------*;
data nodes;
length id $12 component $32 description $64 X 8 Y 8 diagramID $32 parentID $32;
id= "Part";
component="Partition";
description= "Data Partition";
diagramID="_ROOT_";
parentID="";
X=456;
Y=198;
output;
id= "MdlComp";
component="ModelCompare";
description= "Model Comparison";
diagramID="_ROOT_";
parentID="";
X=466;
Y=549;
output;
id= "HPSVM4";
component="HPDMSVM";
description= "HP SVM Sigmoid";
diagramID="_ROOT_";
parentID="";
X=674;
Y=341;
output;
id= "HPSVM3";
component="HPDMSVM";
description= "HP SVM Radial Basis Function";
diagramID="_ROOT_";
parentID="";
X=531;
Y=338;
output;
id= "HPSVM2";
component="HPDMSVM";
description= "HP SVM Polynomial";
diagramID="_ROOT_";
parentID="";
X=379;
Y=338;
output;
id= "HPSVM";
component="HPDMSVM";
description= "HP SVM Linear";
diagramID="_ROOT_";
parentID="";
X=210;
Y=340;
output;
id= "FIMPORT";
component="FileImport";
description= "Credit Card Default";
diagramID="_ROOT_";
parentID="";
X=452;
Y=61;
output;
id= "Dec";
component="Decisions";
description= "Decisions";
diagramID="_ROOT_";
parentID="";
X=577;
Y=136;
output;
run;
*------------------------------------------------------------*;
* EMNOTES File for Part;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Part_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* EMNOTES File for MdlComp;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"MdlComp_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* USERTRAINCODE File for HPSVM4;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"HPSVM4_USERTRAINCODE.sas";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath";
file dspath;
run;
*------------------------------------------------------------*;
* EMNOTES File for HPSVM4;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"HPSVM4_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* USERTRAINCODE File for HPSVM3;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"HPSVM3_USERTRAINCODE.sas";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath";
file dspath;
run;
*------------------------------------------------------------*;
* EMNOTES File for HPSVM3;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"HPSVM3_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* USERTRAINCODE File for HPSVM2;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"HPSVM2_USERTRAINCODE.sas";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath";
file dspath;
run;
*------------------------------------------------------------*;
* EMNOTES File for HPSVM2;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"HPSVM2_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* USERTRAINCODE File for HPSVM;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"HPSVM_USERTRAINCODE.sas";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath";
file dspath;
run;
*------------------------------------------------------------*;
* EMNOTES File for HPSVM;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"HPSVM_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* Variable Attributes for FIMPORT;
*------------------------------------------------------------*;
data WORK.FIMPORT_VariableAttribute;
length Variable $64 AttributeName $32 AttributeValue $64;
Variable='VAR1';
AttributeName="ROLE";
AttributeValue='REJECTED';
Output;
Variable='default_payment_next_month';
AttributeName="ROLE";
AttributeValue='TARGET';
Output;
run;
*------------------------------------------------------------*;
* USERTRAINCODE File for FIMPORT;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"FIMPORT_USERTRAINCODE.sas";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath";
file dspath;
run;
*------------------------------------------------------------*;
* VARIABLESETDELTA File for FIMPORT;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"FIMPORT_VARIABLESETDELTA.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath";
file dspath;
put 'if NAME="default_payment_next_month" then do;';
put 'ROLE="TARGET";';
put 'LEVEL="BINARY";';
put 'ORDER="";';
put 'DROP="N";';
put 'end;';
put 'if NAME="VAR1" then do;';
put 'ROLE="REJECTED";';
put 'LEVEL="INTERVAL";';
put 'ORDER="";';
put 'DROP="N";';
put 'end;';
run;
*------------------------------------------------------------*;
* DELTACODE File for FIMPORT;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"FIMPORT_DELTACODE.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath";
file dspath;
put 'if NAME="default_payment_next_month" then do;';
put 'ROLE="TARGET";';
put 'LEVEL="BINARY";';
put 'ORDER="";';
put 'end;';
put 'if NAME="VAR1" then do;';
put 'ROLE="REJECTED";';
put 'LEVEL="INTERVAL";';
put 'ORDER="";';
put 'end;';
put 'drop DROP;';
run;
*------------------------------------------------------------*;
* EMNOTES File for FIMPORT;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"FIMPORT_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* Decmeta Data Set for Dec;
*------------------------------------------------------------*;
data WORK.Dec_default_payment__DM;
  length   _TYPE_                           $ 32
           VARIABLE                         $ 32
           LABEL                            $ 256
           LEVEL                            $ 32
           EVENT                            $ 32
           ORDER                            $ 10
           FORMAT                           $ 32
           TYPE                             $ 1
           COST                             $ 32
           USE                              $ 1
           ;

  label    _TYPE_="Type"
           VARIABLE="Variable"
           LABEL="Label"
           LEVEL="Measurement Level"
           EVENT="Target Event"
           ORDER="Order"
           FORMAT="Format"
           TYPE="Type"
           COST="Cost"
           USE="Use"
           ;
_TYPE_="MATRIX";
VARIABLE="";
LABEL="";
LEVEL="LOSS";
EVENT="";
ORDER="";
FORMAT="";
TYPE="";
COST="";
USE="Y";
output;
_TYPE_="TARGET";
VARIABLE="default_payment_next_month";
LABEL="default payment next month";
LEVEL="BINARY";
EVENT="1";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="";
output;
_TYPE_="DATAPRIOR";
VARIABLE="DATAPRIOR";
LABEL="Data Prior";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="Y";
output;
_TYPE_="TRAINPRIOR";
VARIABLE="TRAINPRIOR";
LABEL="Training Prior";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="N";
output;
_TYPE_="DECPRIOR";
VARIABLE="DECPRIOR";
LABEL="Decision Prior";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="N";
output;
_TYPE_="PREDICTED";
VARIABLE="P_default_payment_next_month1";
LABEL="Predicted: default_payment_next_month=1";
LEVEL="1";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="";
output;
_TYPE_="RESIDUAL";
VARIABLE="R_default_payment_next_month1";
LABEL="Residual: default_payment_next_month=1";
LEVEL="1";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="";
output;
_TYPE_="PREDICTED";
VARIABLE="P_default_payment_next_month0";
LABEL="Predicted: default_payment_next_month=0";
LEVEL="0";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="";
output;
_TYPE_="RESIDUAL";
VARIABLE="R_default_payment_next_month0";
LABEL="Residual: default_payment_next_month=0";
LEVEL="0";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="";
output;
_TYPE_="FROM";
VARIABLE="F_default_payment_next_month";
LABEL="From: default_payment_next_month";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="C";
COST="";
USE="";
output;
_TYPE_="INTO";
VARIABLE="I_default_payment_next_month";
LABEL="Into: default_payment_next_month";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="C";
COST="";
USE="";
output;
_TYPE_="DECISION";
VARIABLE="DECISION1";
LABEL="1";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="Y";
output;
_TYPE_="DECISION";
VARIABLE="DECISION2";
LABEL="0";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="Y";
output;
_TYPE_="MODELDECISION";
VARIABLE="D_default_payment_next_month";
LABEL="Decision: default_payment_next_month";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="Y";
output;
_TYPE_="EXPECTEDLOSS";
VARIABLE="EL_DEFAULT_PAYMENT_NEXT_MONTH";
LABEL="Expected Loss: default_payment_next_month";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="Y";
output;
_TYPE_="COMPUTEDLOSS";
VARIABLE="CL_DEFAULT_PAYMENT_NEXT_MONTH";
LABEL="Computed Loss: default_payment_next_month";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="Y";
output;
_TYPE_="BESTLOSS";
VARIABLE="BL_DEFAULT_PAYMENT_NEXT_MONTH";
LABEL="Best Loss: default_payment_next_month";
LEVEL="";
EVENT="";
ORDER="";
FORMAT="";
TYPE="N";
COST="";
USE="Y";
output;
;
run;
*------------------------------------------------------------*;
* Decdata Data Set for Dec;
*------------------------------------------------------------*;
data WORK.Dec_default_payment__DD;
  length   default_payment_next_month       $ 32
           COUNT                              8
           DATAPRIOR                          8
           TRAINPRIOR                         8
           DECPRIOR                           8
           DECISION1                          8
           DECISION2                          8
           ;

  label    COUNT="Level Counts"
           DATAPRIOR="Data Proportions"
           TRAINPRIOR="Training Proportions"
           DECPRIOR="Decision Priors"
           DECISION1="1"
           DECISION2="0"
           ;
  format   COUNT 10.
           ;
default_payment_next_month="1";
COUNT=6636;
DATAPRIOR=0.2212;
TRAINPRIOR=0.2212;
DECPRIOR=0;
DECISION1=0;
DECISION2=2;
output;
default_payment_next_month="0";
COUNT=23364;
DATAPRIOR=0.7788;
TRAINPRIOR=0.7788;
DECPRIOR=0;
DECISION1=1;
DECISION2=0;
output;
;
run;
*------------------------------------------------------------*;
* USERTRAINCODE File for Dec;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Dec_USERTRAINCODE.sas";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath";
file dspath;
run;
*------------------------------------------------------------*;
* EMNOTES File for Dec;
*------------------------------------------------------------*;
data _null_;
if symget('sysscp')=:'WIN' then dsep='\';
else if symget('sysscp')=:'DNT' then dsep='\';
else dsep = '/';
filepath = pathname('work')!!dsep!!"Dec_EMNOTES.txt";
call symput('DSPATH', filepath);
run;
data _null_;
filename dspath "&dspath" encoding="utf-8" NOBOM;
file dspath;
run;
*------------------------------------------------------------*;
* Create node properties data set;
*------------------------------------------------------------*;
data nodeprops;
length id $12 property $64 value $400;
id= "Part";
property="Method";
value= "DEFAULT";
output;
id= "Part";
property="TrainPct";
value= "60";
output;
id= "Part";
property="ValidatePct";
value= "20";
output;
id= "Part";
property="TestPct";
value= "20";
output;
id= "Part";
property="RandomSeed";
value= "12345";
output;
id= "Part";
property="OutputType";
value= "DATA";
output;
id= "Part";
property="IntervalDistribution";
value= "Y";
output;
id= "Part";
property="ClassDistribution";
value= "Y";
output;
id= "Part";
property="ForceRun";
value= "N";
output;
id= "Part";
property="RunAction";
value= "Train";
output;
id= "Part";
property="Component";
value= "Partition";
output;
id= "Part";
property="EM_FILE_EMNOTES";
value= "Part_EMNOTES.txt";
output;
id= "MdlComp";
property="NumberOfReportedLevels";
value= "1E-6";
output;
id= "MdlComp";
property="NormalizeReportingVariables";
value= "Y";
output;
id= "MdlComp";
property="DecileBin";
value= "20";
output;
id= "MdlComp";
property="LiftEpsilon";
value= "1E-6";
output;
id= "MdlComp";
property="ProfitEpsilon";
value= "1E-6";
output;
id= "MdlComp";
property="RoiEpsilon";
value= "1E-6";
output;
id= "MdlComp";
property="ScoreDistBin";
value= "20";
output;
id= "MdlComp";
property="RocChart";
value= "Y";
output;
id= "MdlComp";
property="RocEpsilon";
value= "0.01";
output;
id= "MdlComp";
property="AssessAllTargetLevels";
value= "N";
output;
id= "MdlComp";
property="SelectionData";
value= "DEFAULT";
output;
id= "MdlComp";
property="HPCriteria";
value= "DEFAULT";
output;
id= "MdlComp";
property="intervalViyaCriteria";
value= "DEFAULT";
output;
id= "MdlComp";
property="classViyaCriteria";
value= "DEFAULT";
output;
id= "MdlComp";
property="SelectionTable";
value= "TRAIN";
output;
id= "MdlComp";
property="SelectionCriteria";
value= "DEFAULT";
output;
id= "MdlComp";
property="SelectionDepth";
value= "10";
output;
id= "MdlComp";
property="NumberofBins";
value= "20";
output;
id= "MdlComp";
property="RecomputeAssess";
value= "N";
output;
id= "MdlComp";
property="TargetName";
value= "default_payment_next_month";
output;
id= "MdlComp";
property="ModelId";
value= "HPSVM2";
output;
id= "MdlComp";
property="ModelDescription";
value= "HP SVM Polynomial";
output;
id= "MdlComp";
property="ModelCriteria";
value= "Valid: Misclassification Rate";
output;
id= "MdlComp";
property="ForceRun";
value= "N";
output;
id= "MdlComp";
property="RunAction";
value= "Train";
output;
id= "MdlComp";
property="Component";
value= "ModelCompare";
output;
id= "MdlComp";
property="StatisticUsed";
value= "_VALOSS_";
output;
id= "MdlComp";
property="TargetLabel";
value= "default payment next month";
output;
id= "MdlComp";
property="EM_FILE_EMNOTES";
value= "MdlComp_EMNOTES.txt";
output;
id= "HPSVM4";
property="Location";
value= "CATALOG";
output;
id= "HPSVM4";
property="Catalog";
value= "SASHELP.HPDM.HPSVM.SOURCE";
output;
id= "HPSVM4";
property="maxiter";
value= "25";
output;
id= "HPSVM4";
property="missaslvl";
value= "N";
output;
id= "HPSVM4";
property="tolerance";
value= "0.000001";
output;
id= "HPSVM4";
property="penalty";
value= "1";
output;
id= "HPSVM4";
property="method";
value= "ACTIVESET";
output;
id= "HPSVM4";
property="interiorpointkernel";
value= "LINEAR";
output;
id= "HPSVM4";
property="interiorpointdegree";
value= "2";
output;
id= "HPSVM4";
property="activesetkernel";
value= "SIGMOID";
output;
id= "HPSVM4";
property="activesetdegree";
value= "2";
output;
id= "HPSVM4";
property="rbfparameter";
value= "1.0";
output;
id= "HPSVM4";
property="sigmoidparameter1";
value= "1.0";
output;
id= "HPSVM4";
property="sigmoidparameter2";
value= "-1.0";
output;
id= "HPSVM4";
property="ForceRun";
value= "N";
output;
id= "HPSVM4";
property="RunAction";
value= "Train";
output;
id= "HPSVM4";
property="Component";
value= "HPDMSVM";
output;
id= "HPSVM4";
property="ToolType";
value= "MODEL";
output;
id= "HPSVM4";
property="ToolPrefix";
value= "HPSVM";
output;
id= "HPSVM4";
property="EM_FILE_USERTRAINCODE";
value= "HPSVM4_USERTRAINCODE.sas";
output;
id= "HPSVM4";
property="EM_FILE_EMNOTES";
value= "HPSVM4_EMNOTES.txt";
output;
id= "HPSVM3";
property="Location";
value= "CATALOG";
output;
id= "HPSVM3";
property="Catalog";
value= "SASHELP.HPDM.HPSVM.SOURCE";
output;
id= "HPSVM3";
property="maxiter";
value= "25";
output;
id= "HPSVM3";
property="missaslvl";
value= "N";
output;
id= "HPSVM3";
property="tolerance";
value= "0.000001";
output;
id= "HPSVM3";
property="penalty";
value= "1";
output;
id= "HPSVM3";
property="method";
value= "ACTIVESET";
output;
id= "HPSVM3";
property="interiorpointkernel";
value= "LINEAR";
output;
id= "HPSVM3";
property="interiorpointdegree";
value= "2";
output;
id= "HPSVM3";
property="activesetkernel";
value= "RBF";
output;
id= "HPSVM3";
property="activesetdegree";
value= "2";
output;
id= "HPSVM3";
property="rbfparameter";
value= "1.0";
output;
id= "HPSVM3";
property="sigmoidparameter1";
value= "1.0";
output;
id= "HPSVM3";
property="sigmoidparameter2";
value= "-1.0";
output;
id= "HPSVM3";
property="ForceRun";
value= "N";
output;
id= "HPSVM3";
property="RunAction";
value= "Train";
output;
id= "HPSVM3";
property="Component";
value= "HPDMSVM";
output;
id= "HPSVM3";
property="ToolType";
value= "MODEL";
output;
id= "HPSVM3";
property="ToolPrefix";
value= "HPSVM";
output;
id= "HPSVM3";
property="EM_FILE_USERTRAINCODE";
value= "HPSVM3_USERTRAINCODE.sas";
output;
id= "HPSVM3";
property="EM_FILE_EMNOTES";
value= "HPSVM3_EMNOTES.txt";
output;
id= "HPSVM2";
property="Location";
value= "CATALOG";
output;
id= "HPSVM2";
property="Catalog";
value= "SASHELP.HPDM.HPSVM.SOURCE";
output;
id= "HPSVM2";
property="maxiter";
value= "25";
output;
id= "HPSVM2";
property="missaslvl";
value= "N";
output;
id= "HPSVM2";
property="tolerance";
value= "0.000001";
output;
id= "HPSVM2";
property="penalty";
value= "1";
output;
id= "HPSVM2";
property="method";
value= "ACTIVESET";
output;
id= "HPSVM2";
property="interiorpointkernel";
value= "POLYNOM";
output;
id= "HPSVM2";
property="interiorpointdegree";
value= "2";
output;
id= "HPSVM2";
property="activesetkernel";
value= "POLYNOM";
output;
id= "HPSVM2";
property="activesetdegree";
value= "2";
output;
id= "HPSVM2";
property="rbfparameter";
value= "1.0";
output;
id= "HPSVM2";
property="sigmoidparameter1";
value= "1.0";
output;
id= "HPSVM2";
property="sigmoidparameter2";
value= "-1.0";
output;
id= "HPSVM2";
property="ForceRun";
value= "N";
output;
id= "HPSVM2";
property="RunAction";
value= "Train";
output;
id= "HPSVM2";
property="Component";
value= "HPDMSVM";
output;
id= "HPSVM2";
property="ToolType";
value= "MODEL";
output;
id= "HPSVM2";
property="ToolPrefix";
value= "HPSVM";
output;
id= "HPSVM2";
property="EM_FILE_USERTRAINCODE";
value= "HPSVM2_USERTRAINCODE.sas";
output;
id= "HPSVM2";
property="EM_FILE_EMNOTES";
value= "HPSVM2_EMNOTES.txt";
output;
id= "HPSVM";
property="Location";
value= "CATALOG";
output;
id= "HPSVM";
property="Catalog";
value= "SASHELP.HPDM.HPSVM.SOURCE";
output;
id= "HPSVM";
property="maxiter";
value= "25";
output;
id= "HPSVM";
property="missaslvl";
value= "N";
output;
id= "HPSVM";
property="tolerance";
value= "0.000001";
output;
id= "HPSVM";
property="penalty";
value= "1";
output;
id= "HPSVM";
property="method";
value= "IPOINT";
output;
id= "HPSVM";
property="interiorpointkernel";
value= "LINEAR";
output;
id= "HPSVM";
property="interiorpointdegree";
value= "2";
output;
id= "HPSVM";
property="activesetkernel";
value= "POLYNOM";
output;
id= "HPSVM";
property="activesetdegree";
value= "2";
output;
id= "HPSVM";
property="rbfparameter";
value= "1";
output;
id= "HPSVM";
property="sigmoidparameter1";
value= "1";
output;
id= "HPSVM";
property="sigmoidparameter2";
value= "-1";
output;
id= "HPSVM";
property="ForceRun";
value= "N";
output;
id= "HPSVM";
property="RunAction";
value= "Train";
output;
id= "HPSVM";
property="Component";
value= "HPDMSVM";
output;
id= "HPSVM";
property="ToolType";
value= "MODEL";
output;
id= "HPSVM";
property="ToolPrefix";
value= "HPSVM";
output;
id= "HPSVM";
property="EM_FILE_USERTRAINCODE";
value= "HPSVM_USERTRAINCODE.sas";
output;
id= "HPSVM";
property="EM_FILE_EMNOTES";
value= "HPSVM_EMNOTES.txt";
output;
id= "FIMPORT";
property="Location";
value= "CATALOG";
output;
id= "FIMPORT";
property="Catalog";
value= "SASHELP.EMSAMP.Fimport.SOURCE";
output;
id= "FIMPORT";
property="ImportType";
value= "Local";
output;
id= "FIMPORT";
property="GuessRows";
value= "500";
output;
id= "FIMPORT";
property="Delimiter";
value= ",";
output;
id= "FIMPORT";
property="NameRow";
value= "Y";
output;
id= "FIMPORT";
property="SkipRows";
value= "0";
output;
id= "FIMPORT";
property="MaxRows";
value= "1000000";
output;
id= "FIMPORT";
property="MaxCols";
value= "10000";
output;
id= "FIMPORT";
property="FileType";
value= "csv";
output;
id= "FIMPORT";
property="Role";
value= "TRAIN";
output;
id= "FIMPORT";
property="ForceRun";
value= "N";
output;
id= "FIMPORT";
property="Summarize";
value= "N";
output;
id= "FIMPORT";
property="AdvancedAdvisor";
value= "Y";
output;
id= "FIMPORT";
property="RunAction";
value= "Train";
output;
id= "FIMPORT";
property="Component";
value= "FileImport";
output;
id= "FIMPORT";
property="IFileName";
value= "C:\Documents\Data 640\Week 6 - Support Vector Machine (SVM) models using SAS Enterprise Miner\SVM dataset\credit card default data set.csv";
output;
id= "FIMPORT";
property="AccessTable";
value= "NoTableName";
output;
id= "FIMPORT";
property="UserID";
value= "NoUserID";
output;
id= "FIMPORT";
property="Password";
value= "NoPassword";
output;
id= "FIMPORT";
property="ToolType";
value= "SAMPLE";
output;
id= "FIMPORT";
property="ToolPrefix";
value= "FIMPORT";
output;
id= "FIMPORT";
property="EM_VARIABLEATTRIBUTES";
value= "WORK.FIMPORT_VariableAttribute";
output;
id= "FIMPORT";
property="EM_FILE_USERTRAINCODE";
value= "FIMPORT_USERTRAINCODE.sas";
output;
id= "FIMPORT";
property="EM_FILE_VARIABLESETDELTA";
value= "FIMPORT_VARIABLESETDELTA.txt";
output;
id= "FIMPORT";
property="EM_FILE_DELTACODE";
value= "FIMPORT_DELTACODE.txt";
output;
id= "FIMPORT";
property="EM_FILE_EMNOTES";
value= "FIMPORT_EMNOTES.txt";
output;
id= "Dec";
property="Location";
value= "CATALOG";
output;
id= "Dec";
property="Catalog";
value= "SASHELP.EMASSMT.DECISIONS.SOURCE";
output;
id= "Dec";
property="ApplyDecisions";
value= "N";
output;
id= "Dec";
property="ResetDecInfo";
value= "N";
output;
id= "Dec";
property="ToolType";
value= "MODEL";
output;
id= "Dec";
property="Decision";
value= "CUSTOM";
output;
id= "Dec";
property="Matrix";
value= "NONE";
output;
id= "Dec";
property="Prior";
value= "NONE";
output;
id= "Dec";
property="ForceRun";
value= "N";
output;
id= "Dec";
property="RunAction";
value= "Train";
output;
id= "Dec";
property="Component";
value= "Decisions";
output;
id= "Dec";
property="ToolPrefix";
value= "Dec";
output;
id= "Dec";
property="EM_DECMETA_default_payment_next_month";
value= "WORK.Dec_default_payment__DM";
output;
id= "Dec";
property="EM_DECDATA_default_payment_next_month";
value= "WORK.Dec_default_payment__DD";
output;
id= "Dec";
property="EM_FILE_USERTRAINCODE";
value= "Dec_USERTRAINCODE.sas";
output;
id= "Dec";
property="EM_FILE_EMNOTES";
value= "Dec_EMNOTES.txt";
output;
run;
*------------------------------------------------------------*;
* Create connections data set;
*------------------------------------------------------------*;
data connect;
length from to $12;
from="FIMPORT";
to="Dec";
output;
from="Dec";
to="Part";
output;
from="HPSVM";
to="MdlComp";
output;
from="HPSVM2";
to="MdlComp";
output;
from="HPSVM3";
to="MdlComp";
output;
from="HPSVM4";
to="MdlComp";
output;
from="Part";
to="HPSVM4";
output;
from="Part";
to="HPSVM3";
output;
from="Part";
to="HPSVM2";
output;
from="Part";
to="HPSVM";
output;
run;
*------------------------------------------------------------*;
* Create actions to run data set;
*------------------------------------------------------------*;
%macro emaction;
%let actionstring = %upcase(&EM_ACTION);
%if %index(&actionstring, RUN) or %index(&actionstring, REPORT) %then %do;
data actions;
length id $12 action $40;
id="MdlComp";
%if %index(&actionstring, RUN) %then %do;
action='run';
output;
%end;
%if %index(&actionstring, REPORT) %then %do;
action='report';
output;
%end;
run;
%end;
%mend;
%emaction;
*------------------------------------------------------------*;
* Execute the actions;
*------------------------------------------------------------*;
%em5batch(execute, workspace=workspace, nodes=nodes, connect=connect, datasources=datasources, nodeprops=nodeprops, action=actions);
